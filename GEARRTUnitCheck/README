GEAR-RT Units Check
=====================


Run a couple of tests to verify whether your choice of units for a simulation 
might be incompatible with the precision limits for the internal thermochemistry 
computations.

This program assumes that we're running with Grackle and primordial chemistry = 1,
which is the non-equilibrium 6 species network (H0, Hp, He0, Hep, Hepp, e-).


Instructions
-------------

1)  Generate simulation data parameters:
    You need to generate a .yml file that contains a bunch of simulation 
    parameters that are necessary for this test to be run. See 
    `simulation_parameter_example.yml` for a list of all required parameters.

    Alternatively, you could run `generate_simulation_parameter_file.py` on
    a SWIFT snapshot or IC hdf5 file, which will generate the output for you,
    provided the IC file contains all the required units.
    Note that you can freely edit the resulting simulation parameter file
    afterwards, e.g. if you want to test out different min/max particle 
    densities you might reach when the simulation evolves.

    The program expects the file to be named "simulation_parameters.yml" by
    default. If you want to change that, you can find the filename definition 
    at the top of the `main()` function in `main.c`

2)  Provide `main.c` with the correct SWIFT runtime parameter file
    Locate the definition of 
        `char *swift_param_filename = "swift_parameters.yml";`
    in `main()` in `main.c`, and change the file name to the SWIFT parameter
    file that you intend to use for your simulation.

3)  define how many photon groups you are planning to run the simulation 
    with at the top of the file `main.c`, e.g. `#define RT_NGROUPS 4`

4)  Compile and run the test suite using `run.sh`


Results
----------

-   If at any point the code throws an error, it means that most likely your 
    choice of units is not suitable for a run. In any case, it's something
    you definitely need to look into.

-   The code should create two plots: `cooling_test_output.png` and 
    `heating_test_output.png`. Those are results from tests run while using
    grackle where a hot gas parcel is left to cool, and a gas parcel is first
    heated up using radiation and then left to cool, respectively.
    Depending on your initial conditions, the resulting plots may vary 
    strongly. In particular, these tests depends on the number density of the
    particles. The main purpose is to run checks internally while grackle is
    doing its thing, and that the resulting plots should roughly show the 
    characteristics (heating, cooling...) they were set up for. You will most
    likely see strong differences when comparing the results for the average,
    minimal, and maximal density estimate.

